
RutasScreen

Manejo de un select como parte de la tabla:

return (
<div>
<h3>Rutas</h3>
<table id="tblAcciones" className="table table-bordered table-condensed table-hover">
<thead>
<tr>
<th width="20%">Acción</th>
<th width="20%">Ruta</th>
<th width="20%">Ícono</th>
<th width="5%">Actual</th>
<th width="25%">Módulo</th>
<th width="10%">Acción</th>
</tr>
</thead>
<tbody>
{rutas.map((ruta, i) => (
<tr style={{ backgroundColor: i % 2 ? '#F0FAFF' : 'white' }} key={ruta.id} >
<td>{ruta.descripcion}</td>
<td>{ruta.handler}</td>
<td>{ruta.icono}</td>
<td>{ruta.moduloid}</td>

<td>
  <select name={"md_" + ruta.moduloid} id={ruta.moduloid} className="form-control"
    // onChange={(event) => changePerfil(event.target)}
    onChange={manejaCambios}
  >
  {modulos.map((m) => (
<option key={m.id} value={m.nombre} selected={m.id == ruta.moduloid ? true : false} >{m.nombre}</option>
))}
</select>
</td>
<td>
<a href="#" className="btn-xs" data-id="${ruta.id}"
title={"título"} key={"ed_" + ruta.id}>
<i className={"far fa-edit"}></i>
</a>
<a href="#" className="btn btn-xs text-danger" data-id="${ruta.id}"
title={"título"} key={"md_" + ruta.id}>
<i className={"fa-solid fa-eraser"}></i>
</a>
</td>
</tr>
))}
</tbody>
</table>
</div >
)

Mejor se trabaja con una tabla que muestra datos y botones para editar o cambiar al módulo “No asignado” registro por registro.

Fubnción para armar tablas:
function buildTable(arr) {
const head = <thead>
<tr>
<th width="19%">Acción</th>
<th width="27%">Nombre</th>
<th width="15%">Controlador</th>
<th width="25%">Módulo</th>
</tr>
</thead>

const rows = arr.map((row, i) => {
return <tr style={{ backgroundColor: i % 2 ? '#F0FFF2' : 'white' }} key={i}>
<td>{row.id}</td><td>{row.descripcion}</td>
<td>{row.handler}</td><td>{row.icono}</td>
</tr>
})
return <><table>{head}<tbody>{rows}</tbody></table></>
}


Cambios en ModulosScreen

Se usa BottomNavigation en lugar de los nav-pills:
Antes:
<ul className="nav nav-pills corner-all" style={{ border: 'solid 1px #cccccc', padding: '5px' }}>
{modulos.map((mdlo) => (
  <li className="nav-item nav-link" key={mdlo.id} data-id={mdlo.id} 
    style={{ border: 'solid 1px #448', marginBottom: '10px' }} 
    onClick={handleRutas}
  >
  {mdlo.nombre}
  </li>
))}
</ul>

Ahora:
<Box sx={{ width: 500 }}>
  <BottomNavigation showLabels value={value}
    onChange={(event, newValue) => {
      setValue(newValue);
      handleClic(newValue)
    }}
    // onClick={handleClic}
  >
  {modulos.map((mdlo) => (
    <BottomNavigationAction label={mdlo.nombre} value={mdlo.id} data-id={mdlo.id}
    />
  ))}
  </BottomNavigation>
</Box>

Para manejar valores se usa:

const handleClic = (val) => {
  console.log('valor:', val)
  dispatch(accion_cargaRutas(val))
};

Finalmente no se usó <Box>


